{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pricefeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__Not_owner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getfunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumUSD",
          "type": "uint256"
        }
      ],
      "name": "setMinimum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8d4725d44d4352fc236bf3176f5d4909ae6d0e3578d07424d97535b45a3f1d00",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1162091",
    "logsBloom": "0x
    "blockHash": "0x67fbb1115f213ac94d1c2c1644f57aabc2748507e24c2cfcd5424ef77fa2aefe",
    "transactionHash": "0x8d4725d44d4352fc236bf3176f5d4909ae6d0e3578d07424d97535b45a3f1d00",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1162091",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "4ccc72258a206579d273e9221e9a6ab4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pricefeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__Not_owner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getfunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumUSD\",\"type\":\"uint256\"}],\"name\":\"setMinimum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rhaegar\",\"details\":\"This implements price feeds from chainlink as library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/** @title A contract for crowd funding\\r\\n *   @author Rhaegar\\r\\n *   @notice This contract is to demo a sample funding contract\\r\\n *   @dev This implements price feeds from chainlink as library\\r\\n */\\r\\ncontract FundMe {\\r\\n    // Type Declararions\\r\\n    using PriceConvert for uint256;\\r\\n\\r\\n    //State Variables\\r\\n    mapping(address => uint256) public s_addressToAmountFunded;\\r\\n    address[] public s_funders;\\r\\n    address private immutable i_owner;\\r\\n    uint256 private s_minimumUSD = 5 * 10 ** 18;\\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    //events\\r\\n    error FundMe__Not_owner();\\r\\n    //Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert FundMe__Not_owner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Functions Order:\\r\\n    //// constructor\\r\\n    //// receive\\r\\n    //// fallback\\r\\n    //// external\\r\\n    //// public\\r\\n    //// internal\\r\\n    //// private\\r\\n    //// view / pure\\r\\n\\r\\n    constructor(address _pricefeed) public {\\r\\n        s_priceFeed = AggregatorV3Interface(\\r\\n            // 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n            _pricefeed\\r\\n        );\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) >= s_minimumUSD,\\r\\n            \\\"You need to spend more ETH!\\\"\\r\\n        );\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256) {\\r\\n        return s_priceFeed.version();\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        (bool success, ) = address(i_owner).call{value: address(this).balance}(\\r\\n            \\\"\\\"\\r\\n        );\\r\\n        require(success);\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        (bool success, ) = address(i_owner).call{value: address(this).balance}(\\r\\n            \\\"\\\"\\r\\n        );\\r\\n        require(success);\\r\\n        address[] memory funders = s_funders;\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            s_addressToAmountFunded[funders[funderIndex]] = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(\\r\\n        address fundingAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_addressToAmountFunded[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getfunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n    function setMinimum(uint256 _minimumUSD) public onlyOwner {\\r\\n        require(_minimumUSD >= 100000000000000, \\\"Too small !\\\");\\r\\n        s_minimumUSD = _minimumUSD;\\r\\n    }\\r\\n\\r\\n    function getMinimum() public view returns (uint256) {\\r\\n        return s_minimumUSD;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6508b975a48c80fe5a7b594fc2ad79cf5305e57ec38336083bd45c786ca27f0e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvert {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface _pricefeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = _pricefeed.latestRoundData();\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface _priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 price = getPrice(_priceFeed);\\r\\n        uint256 AmountUSD = (ethAmount * price) / 1000000000000000000;\\r\\n        return AmountUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa1cca7e424e0bbafc6321bb18f85f0ea4cdd38023b297a4c43ed1da52d0ea30c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052674563918244f400006002553480156200001d57600080fd5b50604051620014db380380620014db833981810160405281019062000043919062000129565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b6080516113416200019a6000396000818161054401528181610664015281816106eb015281816108d90152818161092901526109b001526113416000f3fe6080604052600436106100c65760003560e01c80633ccfd60b1161007f578063893d20e811610059578063893d20e8146102875780639e87a5cd146102b2578063b60d4288146102dd578063be2693f0146102e7576100d5565b80633ccfd60b1461021557806354861af71461021f57806363aa673b1461025c576100d5565b80630343fb25146100df5780630d8e6e2c1461011c5780630ec3b027146101475780631bf6132d146101725780633209e9e6146101af5780633726102d146101d8576100d5565b366100d5576100d36102f1565b005b6100dd6102f1565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610d26565b610424565b6040516101139190610d6c565b60405180910390f35b34801561012857600080fd5b5061013161046c565b60405161013e9190610d6c565b60405180910390f35b34801561015357600080fd5b5061015c610504565b6040516101699190610de6565b60405180910390f35b34801561017e57600080fd5b5061019960048036038101906101949190610d26565b61052a565b6040516101a69190610d6c565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d19190610e2d565b610542565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190610e2d565b61061a565b60405161020c9190610e69565b60405180910390f35b61021d610662565b005b34801561022b57600080fd5b5061024660048036038101906102419190610e2d565b61088c565b6040516102539190610e69565b60405180910390f35b34801561026857600080fd5b506102716108cb565b60405161027e9190610d6c565b60405180910390f35b34801561029357600080fd5b5061029c6108d5565b6040516102a99190610e69565b60405180910390f35b3480156102be57600080fd5b506102c76108fd565b6040516102d49190610de6565b60405180910390f35b6102e56102f1565b005b6102ef610927565b005b600254610329600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610b4f90919063ffffffff16565b101561036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610ee1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b89190610f30565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610f79565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b655af3107a4000811015610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610ff2565b60405180910390fd5b8060028190555050565b6000600182815481106106305761062f611012565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e7576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161072d90611072565b60006040518083038185875af1925050503d806000811461076a576040519150601f19603f3d011682016040523d82523d6000602084013e61076f565b606091505b505090508061077d57600080fd5b60005b600180549050811015610828576000600182815481106107a3576107a2611012565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082090611087565b915050610780565b50600067ffffffffffffffff811115610844576108436110cf565b5b6040519080825280602002602001820160405280156108725781602001602082028036833780820191505090505b5060019080519060200190610888929190610c1c565b5050565b6001818154811061089c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ac576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516109f290611072565b60006040518083038185875af1925050503d8060008114610a2f576040519150601f19603f3d011682016040523d82523d6000602084013e610a34565b606091505b5050905080610a4257600080fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610ac657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a7c575b5050505050905060005b8151811015610b4a576000806000848481518110610af157610af0611012565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610b4290611087565b915050610ad0565b505050565b600080610b5b83610b8b565b90506000670de0b6b3a76400008286610b7491906110fe565b610b7e919061116f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfd9190611218565b5050509150506402540be40081610c149190611293565b915050919050565b828054828255906000526020600020908101928215610c95579160200282015b82811115610c945782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c3c565b5b509050610ca29190610ca6565b5090565b5b80821115610cbf576000816000905550600101610ca7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf382610cc8565b9050919050565b610d0381610ce8565b8114610d0e57600080fd5b50565b600081359050610d2081610cfa565b92915050565b600060208284031215610d3c57610d3b610cc3565b5b6000610d4a84828501610d11565b91505092915050565b6000819050919050565b610d6681610d53565b82525050565b6000602082019050610d816000830184610d5d565b92915050565b6000819050919050565b6000610dac610da7610da284610cc8565b610d87565b610cc8565b9050919050565b6000610dbe82610d91565b9050919050565b6000610dd082610db3565b9050919050565b610de081610dc5565b82525050565b6000602082019050610dfb6000830184610dd7565b92915050565b610e0a81610d53565b8114610e1557600080fd5b50565b600081359050610e2781610e01565b92915050565b600060208284031215610e4357610e42610cc3565b5b6000610e5184828501610e18565b91505092915050565b610e6381610ce8565b82525050565b6000602082019050610e7e6000830184610e5a565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ecb601b83610e84565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3b82610d53565b9150610f4683610d53565b9250828201905080821115610f5e57610f5d610f01565b5b92915050565b600081519050610f7381610e01565b92915050565b600060208284031215610f8f57610f8e610cc3565b5b6000610f9d84828501610f64565b91505092915050565b7f546f6f20736d616c6c2021000000000000000000000000000000000000000000600082015250565b6000610fdc600b83610e84565b9150610fe782610fa6565b602082019050919050565b6000602082019050818103600083015261100b81610fcf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b600061105c600083611041565b91506110678261104c565b600082019050919050565b600061107d8261104f565b9150819050919050565b600061109282610d53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110c4576110c3610f01565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061110982610d53565b915061111483610d53565b925082820261112281610d53565b9150828204841483151761113957611138610f01565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061117a82610d53565b915061118583610d53565b92508261119557611194611140565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6111bf816111a0565b81146111ca57600080fd5b50565b6000815190506111dc816111b6565b92915050565b6000819050919050565b6111f5816111e2565b811461120057600080fd5b50565b600081519050611212816111ec565b92915050565b600080600080600060a0868803121561123457611233610cc3565b5b6000611242888289016111cd565b955050602061125388828901611203565b945050604061126488828901610f64565b935050606061127588828901610f64565b9250506080611286888289016111cd565b9150509295509295909350565b600061129e826111e2565b91506112a9836111e2565b92508282026112b7816111e2565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156112ef576112ee610f01565b5b828205841483151761130457611303610f01565b5b509291505056fea2646970667358221220ad2c7933076e2dad391ccad6f6d5dee42c60521a1f01b7b1a6e4f0748f52c7d164736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100c65760003560e01c80633ccfd60b1161007f578063893d20e811610059578063893d20e8146102875780639e87a5cd146102b2578063b60d4288146102dd578063be2693f0146102e7576100d5565b80633ccfd60b1461021557806354861af71461021f57806363aa673b1461025c576100d5565b80630343fb25146100df5780630d8e6e2c1461011c5780630ec3b027146101475780631bf6132d146101725780633209e9e6146101af5780633726102d146101d8576100d5565b366100d5576100d36102f1565b005b6100dd6102f1565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610d26565b610424565b6040516101139190610d6c565b60405180910390f35b34801561012857600080fd5b5061013161046c565b60405161013e9190610d6c565b60405180910390f35b34801561015357600080fd5b5061015c610504565b6040516101699190610de6565b60405180910390f35b34801561017e57600080fd5b5061019960048036038101906101949190610d26565b61052a565b6040516101a69190610d6c565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d19190610e2d565b610542565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190610e2d565b61061a565b60405161020c9190610e69565b60405180910390f35b61021d610662565b005b34801561022b57600080fd5b5061024660048036038101906102419190610e2d565b61088c565b6040516102539190610e69565b60405180910390f35b34801561026857600080fd5b506102716108cb565b60405161027e9190610d6c565b60405180910390f35b34801561029357600080fd5b5061029c6108d5565b6040516102a99190610e69565b60405180910390f35b3480156102be57600080fd5b506102c76108fd565b6040516102d49190610de6565b60405180910390f35b6102e56102f1565b005b6102ef610927565b005b600254610329600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610b4f90919063ffffffff16565b101561036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610ee1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b89190610f30565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610f79565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b655af3107a4000811015610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610ff2565b60405180910390fd5b8060028190555050565b6000600182815481106106305761062f611012565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e7576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161072d90611072565b60006040518083038185875af1925050503d806000811461076a576040519150601f19603f3d011682016040523d82523d6000602084013e61076f565b606091505b505090508061077d57600080fd5b60005b600180549050811015610828576000600182815481106107a3576107a2611012565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082090611087565b915050610780565b50600067ffffffffffffffff811115610844576108436110cf565b5b6040519080825280602002602001820160405280156108725781602001602082028036833780820191505090505b5060019080519060200190610888929190610c1c565b5050565b6001818154811061089c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ac576040517f6647780a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516109f290611072565b60006040518083038185875af1925050503d8060008114610a2f576040519150601f19603f3d011682016040523d82523d6000602084013e610a34565b606091505b5050905080610a4257600080fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610ac657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a7c575b5050505050905060005b8151811015610b4a576000806000848481518110610af157610af0611012565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610b4290611087565b915050610ad0565b505050565b600080610b5b83610b8b565b90506000670de0b6b3a76400008286610b7491906110fe565b610b7e919061116f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfd9190611218565b5050509150506402540be40081610c149190611293565b915050919050565b828054828255906000526020600020908101928215610c95579160200282015b82811115610c945782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c3c565b5b509050610ca29190610ca6565b5090565b5b80821115610cbf576000816000905550600101610ca7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf382610cc8565b9050919050565b610d0381610ce8565b8114610d0e57600080fd5b50565b600081359050610d2081610cfa565b92915050565b600060208284031215610d3c57610d3b610cc3565b5b6000610d4a84828501610d11565b91505092915050565b6000819050919050565b610d6681610d53565b82525050565b6000602082019050610d816000830184610d5d565b92915050565b6000819050919050565b6000610dac610da7610da284610cc8565b610d87565b610cc8565b9050919050565b6000610dbe82610d91565b9050919050565b6000610dd082610db3565b9050919050565b610de081610dc5565b82525050565b6000602082019050610dfb6000830184610dd7565b92915050565b610e0a81610d53565b8114610e1557600080fd5b50565b600081359050610e2781610e01565b92915050565b600060208284031215610e4357610e42610cc3565b5b6000610e5184828501610e18565b91505092915050565b610e6381610ce8565b82525050565b6000602082019050610e7e6000830184610e5a565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ecb601b83610e84565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3b82610d53565b9150610f4683610d53565b9250828201905080821115610f5e57610f5d610f01565b5b92915050565b600081519050610f7381610e01565b92915050565b600060208284031215610f8f57610f8e610cc3565b5b6000610f9d84828501610f64565b91505092915050565b7f546f6f20736d616c6c2021000000000000000000000000000000000000000000600082015250565b6000610fdc600b83610e84565b9150610fe782610fa6565b602082019050919050565b6000602082019050818103600083015261100b81610fcf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b600061105c600083611041565b91506110678261104c565b600082019050919050565b600061107d8261104f565b9150819050919050565b600061109282610d53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110c4576110c3610f01565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061110982610d53565b915061111483610d53565b925082820261112281610d53565b9150828204841483151761113957611138610f01565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061117a82610d53565b915061118583610d53565b92508261119557611194611140565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6111bf816111a0565b81146111ca57600080fd5b50565b6000815190506111dc816111b6565b92915050565b6000819050919050565b6111f5816111e2565b811461120057600080fd5b50565b600081519050611212816111ec565b92915050565b600080600080600060a0868803121561123457611233610cc3565b5b6000611242888289016111cd565b955050602061125388828901611203565b945050604061126488828901610f64565b935050606061127588828901610f64565b9250506080611286888289016111cd565b9150509295509295909350565b600061129e826111e2565b91506112a9836111e2565b92508282026112b7816111e2565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156112ef576112ee610f01565b5b828205841483151761130457611303610f01565b5b509291505056fea2646970667358221220ad2c7933076e2dad391ccad6f6d5dee42c60521a1f01b7b1a6e4f0748f52c7d164736f6c63430008120033",
  "devdoc": {
    "author": "Rhaegar",
    "details": "This implements price feeds from chainlink as library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_minimumUSD",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}